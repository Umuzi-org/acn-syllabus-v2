---
layout: "reveal.njk"
---

<section>
  <h2>The life of a technologist</h2>
  <h3 class="fragment">
    In a <span class="strong">high performing</span> team
  </h3>
</section>

<section>
  <h2>Our goal</h2>
  <ul>
    <li class="fragment">We want you to be successful in your career!</li>
    <li class="fragment">Help you to master technical concepts</li>
    <li class="fragment">Practice skills needed to be an awesome team mate</li>
  </ul>
  <div class="fragment">
    <p>Software is eating the world</p>
    <img src="images/eating the world.drawio.svg" />
  </div>
</section>

<section>
  <section>
    <h2>High performing dev teams</h2>
    <ul>
      <li class="fragment">Made up of high performing team members</li>
      <li class="fragment">Focus on collaboration</li>
      <li class="fragment">
        Create real value by finishing things
        <ul>
          <li class="fragment">99% finished => sunk cost</li>
          <li class="fragment">100% finished with bugs => damage control</li>
        </ul>
      </li>
      <li class="fragment">Use the right tools for the job</li>
    </ul>
  </section>

  <section>
    <h3>Kanban</h3>
    <img src="images/kanban.drawio.svg" /><br />
    <ul>
      <li class="fragment">Agile and lean practices</li>
      <li class="fragment">
        Gives you a bit of agency in choosing your next task
      </li>
      <li class="fragment">Gives you a chance to hone prioritisation skills</li>
    </ul>
  </section>

  <section>
    <h3>Git</h3>
    <img src="images/git.drawio.svg" />
    <br />
    <ul>
      <li class="fragment">Industry standard version control tool</li>
      <li class="fragment">Makes dev collaboration possible</li>
      <li class="fragment">Makes it safe to try things</li>
      <li class="fragment">Fancy automations</li>
    </ul>
  </section>

  <section>
    <h3>Chat</h3>
    <img src="images/rocketchat.png" /><br />
    <ul>
      <li class="fragment">Email is insufficient</li>
      <li class="fragment">Public square / asynchronous water-cooler</li>
    </ul>
  </section>

  <section>
    <h2>High performing dev teams</h2>
    <h3>...value deep focused work</h3>
    <ul>
      <li class="fragment">Thought workers need space to get things done</li>
      <li class="fragment">Have large blocks of time for deep work</li>
      <li class="fragment">Asynchronous communication</li>
    </ul>
  </section>

  <section>
    <h2>High performing dev teams</h2>
    <h3>...follow remote work best practice</h3>
    <p>
      You can get away with communication bad practices if you are working
      synchronously and in person.
    </p>
    <ul>
      <li class="fragment">Make good use of interactions / rituals</li>
      <li class="fragment">Watch your comms, but also focus</li>
    </ul>
  </section>

  <section>
    <h2>High performing dev teams</h2>
    <h3>...Make the most of standups</h3>
    <ul>
      <li class="fragment">If you need something, say something</li>
      <li class="fragment">
        If you are worried about a team mate, say something
      </li>
      <li class="fragment">The scrum master is there to help unblock you</li>
      <li class="fragment">
        Be a good team mate - if you are in a position to help, put up your hand
      </li>
    </ul>
  </section>

  <section>
    <h2>High performing dev teams</h2>
    <h3>...build and maintain leverage</h3>
    <ul>
      <li class="fragment">prioritize knowledge spread</li>
      <li class="fragment">team mates set each other up for success</li>
      <li class="fragment">
        team mates work carefully so that they don't trip anyone else up
      </li>
      <li class="fragment">
        every team mate is dedicated to making their peers more successful and
        knowledgeable
      </li>
    </ul>
  </section>
</section>

<section>
  <h2>Let's talk about you</h2>
</section>

<section>
  <h2>Techies learn constantly</h2>
  <ul>
    <li class="fragment">New tools, techniques, best practices...</li>
    <li class="fragment">Don't just learn - learn how to learn</li>
    <li class="fragment">Don't wait to be tested - test yourself</li>
    <li class="fragment">
      Don't just solve problems - learn how to approach problems
    </li>
    <li class="fragment">
      Don't be scared of breaking stuff - experiment, stumble, grow
    </li>
    <li class="fragment">You'll need some grit for this</li>
  </ul>
</section>

<section>
  <h2>The zen of coding</h2>
  <section>
    <ul>
      <li class="fragment">Be ok with being hella confused</li>
      <li class="fragment">Learn to be focused while under pressure</li>
      <li class="fragment">
        If the code doesn't work: accept reality and move forward
      </li>
      <li class="fragment">
        Accept that frustration is a part of the job
        <ul>
          <li class="fragment">confusion => anger</li>
          <li class="fragment">changing expectations and needs</li>
          <li class="fragment">changing landscape, learning fatigue</li>
        </ul>
      </li>
    </ul>
  </section>
  <section>
    <ul>
      <li class="fragment">Foster a growth mindset</li>
      <li class="fragment">
        overcoming hurdles is the best way to learn to overcome bigger hurdles
      </li>
      <li class="fragment">
        Your ability to withstand frustration is like a muscle you can build
      </li>
      <li class="fragment">
        Prove to yourself that you can overcome hard things
      </li>
      <li class="fragment">Celebrate the little wins</li>
      <li class="fragment">
        Sometimes you just need to sleep on it - it's ok to walk away from a
        problem, but come back!
      </li>
    </ul>
  </section>
</section>

<section>
  <h2>Finding answers</h2>

  <section>
    Understanding is the key difference between a bad developer and a good
    developer ‚Äî‚ÄäMax Kanat-Alexander, Code Simplicity
  </section>

  <section>
    <ul>
      <li>Google it üòú</li>
      <li class="fragment">The official docs are your friend</li>
      <li class="fragment">Stackoverflow == ‚ù§Ô∏è</li>
      <li class="fragment">
        Beware the illusion of competence!
        <ul>
          <li class="fragment">Watching videos is a nice intro</li>
          <li class="fragment">You don't know it until you can do it</li>
          <li class="fragment">
            Coding is a craft. Mastery comes from practice
          </li>
        </ul>
      </li>
    </ul>
  </section>

  <section>
    <ul>
      <li>Learn how to ask good questions</li>
      <li class="fragment">
        Make yourself easy to help and you will get better help
      </li>
    </ul>
  </section>

  <section>
    <img src="images/duck.jpeg" height="300em" />
    <p>RUBBER DUCKING</p>
  </section>
</section>

<section>
  <section>
    <h2>Code review</h2>
    <ul>
      <li class="fragment">Mistakes are a part of the game</li>
      <li class="fragment">
        The earlier you spot a problem, the cheaper it is to fix
      </li>
      <li class="fragment">Many eyes => fewer bugs</li>
      <li class="fragment">
        It builds leverage in a team by empowering people with knowledge - both
        the reviewer and the reviewed
      </li>
    </ul>
  </section>

  <section>
    <h2>Learning from code review</h2>

    <img src="images/proximal-development.drawio.svg" height="300em" />
    <p>Zone of proximal development</p>
  </section>
  <section>
    <h2>Learning from code review</h2>
    <ul>
      <li>Remember that you are talking to a person</li>
      <li class="fragment">Ask for clarification if you are stuck</li>
      <li class="fragment">Accept that nobody will just give you the answer</li>
      <li class="fragment">
        Don't submit work that you know is wrong or incomplete
      </li>
    </ul>
  </section>

  <section>
    <h2>How to be a good reviewer</h2>
    <ul>
      <li class="fragment">Be clear</li>
      <li class="fragment">Be complete</li>
      <li class="fragment">Be fast</li>
      <li class="fragment">Don't spoonfeed anyone</li>
      <li class="fragment">Remember that you are talking to a person</li>
      <li class="fragment">
        A good team mate tries to help their team members to grow and learn
      </li>
      <li class="fragment">Learn from different approaches</li>
    </ul>
  </section>
</section>

<section>
  <h2>Clean code</h2>
  <section>
    <blockquote>
      It is more important to reduce the effort of maintenance than it is to
      reduce the effort of implementation. Max Kanat-Alexander, Code Simplicity
    </blockquote>
  </section>
  <section>
    <blockquote>
      The design of software aims to make developers job as easy as possible so
      they can focus on what matters. Helping the end user
    </blockquote>
  </section>

  <section>
    <blockquote>
      Simplicity is the ultimate sophistication ‚Äî‚ÄäLeonardo da Vinci
    </blockquote>
  </section>

  <section>
    <ul>
      <li>Make life easy for reviewers</li>
      <li class="fragment">Good code is consistent</li>
      <li class="fragment">
        Good code makes its intention clear
        <ul>
          <li class="fragment">Clear names</li>
          <li class="fragment">Simple algorithms</li>
          <li class="fragment">Cohesion</li>
        </ul>
      </li>
      <li class="fragment">
        Build good habits now - don't write bad code with the intention of
        cleaning it up later
      </li>
      <li class="fragment">Consider the next coder to be your client</li>
    </ul>
  </section>
</section>
<section>
  <h1>&lt/presentation></h1>
</section>
